// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package types

import (
	"encoding/json"
	"errors"

	"github.com/ethereum/go-ethereum/common"
)

// MarshalJSON marshals as JSON.
func (s StorageCheckTuple) MarshalJSON() ([]byte, error) {
	type StorageCheckTuple struct {
		Address       common.Address `json:"address" gencodec:"required"`
		StorageChecks []StorageKeyValueCheck `json:"storageChecks" gencodec:"required"`
	}
	var enc StorageCheckTuple
	enc.Address = s.Address
	enc.StorageChecks = s.StorageKeyValueChecks
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (s *StorageCheckTuple) UnmarshalJSON(input []byte) error {
	type StorageCheckTuple struct {
		Address       *common.Address `json:"address" gencodec:"required"`
		StorageChecks []StorageKeyValueCheck  `json:"storageChecks" gencodec:"required"`
	}
	var dec StorageCheckTuple
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Address == nil {
		return errors.New("missing required field 'address' for StorageCheckTuple")
	}
	s.Address = *dec.Address
	if dec.StorageChecks == nil {
		return errors.New("missing required field 'storageChecks' for StorageCheckTuple")
	}
	s.StorageKeyValueChecks = dec.StorageChecks
	return nil
}
